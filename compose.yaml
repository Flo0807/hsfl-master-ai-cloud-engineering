services:
  load-balancer:
    build:
      context: ./
      dockerfile: ./src/load-balancer/Dockerfile
    ports:
      - '3001:3000'
    environment:
      - SERVER_PORT=3000
      - IMAGE=docker.io/yeasy/simple-web
      - NETWORK_NAME=bulletinboard
      - REPLICAS=3
      - HEALTH_CHECK_INTERVAL_SECONDS=5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - bulletinboard
  gateway:
    build:
      context: ./
      dockerfile: ./src/api-gateway/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - SERVER_PORT=3000
      - WEB_SERVICE_URL=http://web-service:3000
      - AUTH_SERVICE_URL=http://auth-service:3000
      - BULLETIN_BOARD_SERVICE_URL=http://bulletin-board-service:3000
      - FEED_SERVICE_URL=http://feed-service:3000
    depends_on:
      - auth-service
      - bulletin-board-service
      - feed-service
      - web-service
  web-service:
    build:
      context: ./
      dockerfile: ./src/web-service/Dockerfile
    environment:
      - SERVER_PORT=3000
  auth-service:
    build:
      context: ./
      dockerfile: ./src/auth-service/Dockerfile
    environment:
      - HTTP_SERVER_PORT=3000
      - GRPC_SERVER_PORT=50051
      - JWT_PRIVATE_KEY=./key
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=postgres
    depends_on:
      postgres:
        condition: service_healthy
  bulletin-board-service:
    build:
      context: ./
      dockerfile: ./src/bulletin-board-service/Dockerfile
    environment:
      - HTTP_SERVER_PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=postgres
      - AUTH_SERVICE_URL_GRPC=auth-service:50051
    depends_on:
      postgres:
        condition: service_healthy
  feed-service:
    build:
      context: ./
      dockerfile: ./src/feed-service/Dockerfile
    environment:
      - SERVER_PORT=3000
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  bulletinboard:
    driver: bridge
    name: bulletinboard
